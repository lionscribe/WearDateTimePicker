apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
// apply plugin: 'com.github.dcendents.android-maven'
// apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 33


    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 33
		namespace "com.kimjio.wear.datetimepicker"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    publishing {
        publishing {
            singleVariant("release") {
                withSourcesJar()
                withJavadocJar()
            }
        }
    }
}

ext {
    publishedGroupId = 'com.lionscribe'
    libraryName = 'WearDateTimePicker'
    artifact = 'weardatetimepicker'

    libraryDescription = 'DateTimePicker for Wear OS (from Wear OS Settings)'

    siteUrl = 'https://github.com/lionscribe/WearDateTimePicker'
    gitUrl = 'https://github.com/lionscribe/WearDateTimePicker.git'

    libraryVersion = '2.2'

    developerId = 'lionscribe'
    developerName = 'Lionscribe'
    developerEmail = 'lionscribe@gmail.com'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.wear:wear:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = publishedGroupId
            artifactId = artifact
            version = libraryVersion

            afterEvaluate {
                from components.release
            }
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
